# Copyright (C) 2023 Frank Roth <developer@freakydude.de>

# Internal G-Code macros to support the
# basic features needed for BigTreeTech-TouchscreenFirmware (https://github.com/bigtreetech/BIGTREETECH-TouchScreenFirmware) 
# in combination with Mainsail frontend
#
# These are not called directly, but are encapsuled by macros defined in macros-examles.cfg or by your individual implementation.

[gcode_macro _FD_START_PRINT]
gcode:
  CLEAR_PAUSE
  _BTT_START
  _FD_SET_PRINT_STATS_INFO

[gcode_macro _FD_END_PRINT]
gcode:
  CLEAR_PAUSE
  _BTT_END

[gcode_macro _FD_PAUSE]
description: Pause the actual running print

gcode:
  _BTT_PAUSE
  # save extruder temperature
  SET_GCODE_VARIABLE MACRO=_FD_RESUME VARIABLE=last_extruder_temp VALUE="{printer[printer.toolhead.extruder].target}"  
  _FD_TOOLHEAD_PARK_PAUSE_CANCEL

[gcode_macro _FD_RESUME]
description: Resume the actual running print
variable_last_extruder_temp: 0
gcode:
  _BTT_RESUME
  ##### read extrude from _FD_TOOLHEAD_PARK_PAUSE_CANCEL  macro #####
  {% set extrude = printer['gcode_macro _FD_TOOLHEAD_PARK_PAUSE_CANCEL'].extrude %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####

  # restore extruder temperature
  SET_HEATER_TEMPERATURE HEATER=extruder TARGET={last_extruder_temp}
  TEMPERATURE_WAIT SENSOR=extruder MINIMUM={last_extruder_temp*0.98} MAXIMUM={last_extruder_temp*1.02}

  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  

[gcode_macro _FD_CANCEL_PRINT]
description: Cancel the actual running print
variable_park: True
gcode:
  _BTT_CANCEL
  ## Move head and retract only if not already in the pause state and park set to true
  {% if printer.pause_resume.is_paused|lower == 'false' and park|lower == 'true'%}
    _FD_TOOLHEAD_PARK_PAUSE_CANCEL
  {% endif %}
  TURN_OFF_HEATERS

[gcode_macro _FD_TOOLHEAD_PARK_PAUSE_CANCEL]
description: Helper: park toolhead used in PAUSE and CANCEL_PRINT
variable_extrude: 1.0
gcode:
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  {% set z_park_delta = 2.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - z_park_delta) %}
    {% set z_safe = z_park_delta %}
  {% else %}
    {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E-{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G91
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
    {% if printer.gcode_move.absolute_coordinates|lower == 'false' %} G91 {% endif %}
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}

[gcode_macro _FD_RUN_IDLE_TIMEOUT]
gcode:
  {% if printer.pause_resume.is_paused %}
    {action_respond_info("Extruder powered down on idle timeout.")}
    SET_GCODE_VARIABLE MACRO=_FD_RESUME VARIABLE=last_extruder_temp VALUE="{printer[printer.toolhead.extruder].target}"  
    M117 Idle timeout, hotend cooldown
    RESPOND TYPE=echo MSG="Idle timeout, hotend cooldown"
    M104 S0  # Set Hot-end to 0C (off)    
  {% else %}
    M117 Idle timeout, poweroff
    RESPOND TYPE=echo MSG="Idle timeout, poweroff"
    TURN_OFF_HEATERS
    M84
  {% endif %}

[gcode_macro _FD_SET_PRINT_STATS_INFO]
gcode:
  _BTT_NOTIFY_LAYERLEFT CURRENT={printer.print_stats.info.current_layer} MAX={printer.print_stats.info.total_layer}
  _BTT_NOTIFY_DATALEFT CURRENT={printer.virtual_sdcard.file_position} MAX={printer.virtual_sdcard.file_size}


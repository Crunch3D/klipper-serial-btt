# Copyright (C) 2023 Frank Roth <developer@freakydude.de>

# Internal G-Code macros to support the
# basic features needed for BigTreeTech-TouchscreenFirmware (https://github.com/bigtreetech/BIGTREETECH-TouchScreenFirmware) 
# in combination with Mainsail frontend

# These are not called directly, but are encapsuled by macros defined in macros-examles.cfg or by your individual implementation.

[gcode_macro _FD_RUN_IDLE_TIMEOUT]
description:  Internal
  Starts if idle timeout has expired
  triggered by klipper
gcode:
  {% if printer.pause_resume.is_paused %}
    SET_GCODE_VARIABLE MACRO=_FD_RESUME VARIABLE=last_extruder_temp VALUE="{printer[printer.toolhead.extruder].target}"  
    
    M117 Idle timeout, hotend cooldown
    _SEND_TO_BTT MESSAGE="Idle timeout, hotend cooldown"

    M104 S0  # cooldown the hotend
  {% else %}
    M117 Idle timeout, poweroff
    _SEND_TO_BTT MESSAGE="Idle timeout, poweroff"
    
    # Shutdown
    TURN_OFF_HEATERS
    M84
  {% endif %}

[gcode_macro _FD_SET_PRINT_STATS_INFO]
description: Internal
  Enables mainsail and display features
  triggered by slicer
gcode:
  {% set CURRENT_LAYER = printer.print_stats.info.current_layer  | default(0) | int %}

  _BTT_NOTIFY_LAYERLEFT CURRENT={CURRENT_LAYER +1} MAX={printer.print_stats.info.total_layer}

  {% if printer.virtual_sdcard.file_size is defined and printer.virtual_sdcard.file_size > 0 %}
    _BTT_NOTIFY_DATALEFT CURRENT={printer.virtual_sdcard.file_position} MAX={printer.virtual_sdcard.file_size}
  {% endif %}

[gcode_macro _FD_PAUSE]
description: Internal
  Pause the current running print
  triggered by mainsail
gcode:
  SAVE_GCODE_STATE NAME=_fd_pause_state 

  _BTT_PAUSE
  # save extruder temperature
  SET_GCODE_VARIABLE MACRO=_FD_RESUME VARIABLE=last_extruder_temp VALUE="{printer[printer.toolhead.extruder].target}"  
  
  M83
  G1 E-3.0 F2100

  _FD_PARK

  RESTORE_GCODE_STATE NAME=_fd_pause_state 

[gcode_macro _FD_RESUME]
description: Internal
  Resume the current running print
  triggered by mainsail
variable_last_extruder_temp: 0
gcode:
  SAVE_GCODE_STATE NAME=_fd_resume_state 

  _BTT_RESUME

  # restore extruder temperature
  SET_HEATER_TEMPERATURE HEATER=extruder TARGET={last_extruder_temp}
  TEMPERATURE_WAIT SENSOR=extruder MINIMUM={last_extruder_temp*0.98} MAXIMUM={last_extruder_temp*1.02}

  M83
  G1 E3.0 F2100  

  RESTORE_GCODE_STATE NAME=_fd_resume_state 

[gcode_macro _FD_CANCEL_PRINT]
description: Internal
  Cancel the current running print
  triggered by mainsail
variable_park: True
gcode:
  _BTT_CANCEL
  
  {% if printer.pause_resume.is_paused | lower == 'true' %}
    # In Pause, already parked, stop print
    _FD_PRESENT
    TURN_OFF_HEATERS
  {% else %}
    _FD_STOP_PRINT
  {% endif %}

[gcode_macro _FD_START_PRINT]
description: Internal 
  Startcode to prepare a new printing
  triggered by slicer 
gcode:
  CLEAR_PAUSE
  _BTT_START
  _FD_SET_PRINT_STATS_INFO

[gcode_macro _FD_END_PRINT]
description: Internal
  Endcode to finalize made printing
  triggered by slicer 
gcode:
  _BTT_END

[gcode_macro _FD_STOP_PRINT]
description: Common code for cancel/end print
gcode:
  SAVE_GCODE_STATE NAME=_fd_stop_print_state 

  {% set STOP_X = printer.toolhead.position.x + 10.0 | float %}
  {% set STOP_Y = printer.toolhead.position.y + 2.0 | float %}
  {% set STOP_Z = printer.toolhead.position.z + 2.0 | float %}

  {% if STOP_X > printer.toolhead.axis_maximum.x %}
    {% set STOP_X = printer.toolhead.axis_maximum.x %}
  {% endif %}

  {% if STOP_Y > printer.toolhead.axis_maximum.y %}
    {% set STOP_Y = printer.toolhead.axis_maximum.y %}
  {% endif %}

  {% if STOP_Z > printer.toolhead.axis_maximum.z %}
    {% set STOP_Z = printer.toolhead.axis_maximum.z %}
  {% endif %}

  M117 Stop printing
  # Move nozzle away from print while retracting
  G90  # use relative coordinates
  G1 X{STOP_X} Y{STOP_Y} Z{STOP_Z} E-3 F3000
  
  TURN_OFF_HEATERS
  _FD_PRESENT  

  RESTORE_GCODE_STATE NAME=_fd_stop_print_state 

[gcode_macro _FD_PARK]
gcode:
  SAVE_GCODE_STATE NAME=_fd_park_state 

  {% set PARK_Z = printer.toolhead.position.z + 25.0 | float %}

  {% if PARK_Z > printer.toolhead.axis_maximum.z %}
    {% set PARK_Z = printer.toolhead.axis_maximum.z %}
  {% endif %}

  G90 # use absolute coordinates  
  G1 X0 Y0 Z{PARK_Z} F3000 # move to corner of the bed to avoid ooze over centre

  RESTORE_GCODE_STATE NAME=_fd_park_state 

[gcode_macro _FD_PRESENT]
description: Moves the bed to the front, the extruder up and center at the end of a print
gcode:  
  SAVE_GCODE_STATE NAME=_fd_present_state 

  {% set PARK_X = printer.toolhead.axis_maximum.x / 2.0 | float %} # center
  {% set PARK_Y = printer.toolhead.axis_maximum.y | float %} # move bed in front
  {% set PARK_Z = printer.toolhead.position.z + 25.0 | float %}

  {% if PARK_Z > printer.toolhead.axis_maximum.z %}
    {% set PARK_Z = printer.toolhead.axis_maximum.z %}
  {% endif %}

  M117 Present printing

  # Move nozzle away from print while retracting
  G91 # use relative coordinates  
  G1 E-3 F300

  G90 # use absolute coordinates  
  G1 X{PARK_X} Y{PARK_Y} Z{PARK_Z} F3000

  RESTORE_GCODE_STATE NAME=_fd_present_state
